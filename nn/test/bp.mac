load_mac("nn/packages.mac")$
load_mac("test.mac")$

load_mac("nn/test/data.mac")$

suite:test_suite_begin("BPNN Test Suite",[])$

test_suite_log(suite,"Test functions in the BPNN.")$
bpnn:[]$
nn_outputs:[]$
bpnn_create_case:test_case_begin(suite,"Test bpnn_new",[])$
test_case_run(
  bpnn_create_case,
  test_case_log(bpnn_create_case,"Transfer function value at 1"),
  test_case_log(bpnn_create_case,transfer_function(1)),
  test_case_log(bpnn_create_case,"create BPNN."),
  bpnn:bpnn_new(
    dims,
    hides,
    [transfer,transfer],
    total_error),
  test_case_log(bpnn_create_case,bpnn),
  test_case_assert_not_equal(
    bpnn_create_case,
    "Created a BPNN structure",
    bpnn,
    []),
  
  test_case_assert_equal(
    bpnn_create_case,
    "Dims equal.",
    dims,
    bpnn@dims),
  
  maplist(
    lambda(
      [f1,f2],
      test_case_assert_equal(
        bpnn_create_case,
        "Transfer functions equal.",
        f1(1),
        f2(1))),
    [transfer,transfer],
    bpnn@transfer_functions),
  
  test_case_assert_equal(
    bpnn_create_case,
    "Error function.",
    total_error([[1,1]],[[1,1]]),
    bpnn@error_function([[1,1]],[[1,1]])))$
test_case_end(bpnn_create_case)$


bpnn_output_case:test_case_begin(suite,"Test bpnn_caculate_symbol_output.",[])$
test_case_run(
  bpnn_output_case,
  test_case_log(bpnn_output_case,"Input values."),
  nn_outputs:maplist(
    lambda(
      [input],
      test_case_log(bpnn_output_case,"Logging input value:"),
      test_case_log(bpnn_output_case,input),
      output:bpnn_caculate_symbol_output(bpnn,input),
      test_case_log(bpnn_output_case,"Logging output value"),
      test_case_log(bpnn_output_case,output),
      test_case_assert_equal(
        bpnn_output_case,
        "Output size",
        [1,2],
        matrix_size(output)),
      output),
    inputs))$
test_case_end(bpnn_output_case)$

bpnn_error_case:test_case_begin(suite,"Test bpnn_caculate_symbol_error.",[])$
test_case_run(
  bpnn_error_case,
  maplist(
    lambda(
      [input,output],
      test_case_log(bpnn_error_case,"Logging input value:"),
      test_case_log(bpnn_error_case,input),
      test_case_log(bpnn_error_case,"Logging output value"),
      test_case_log(bpnn_error_case,output)),
    inputs,
    outputs),
  
  test_case_log(bpnn_error_case,"Loging error value"),
  test_case_log(
    bpnn_error_case,
    bpnn_caculate_symbol_error(bpnn,inputs,outputs)))$
test_case_end(bpnn_error_case)$

test_suite_end(suite)$