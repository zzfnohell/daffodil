load_mac("nn/packages.mac")$
load_mac("test.mac")$

load_mac("nn/test/data.mac")$

suite:test_suite_begin("Test bpnn_solve_lms",[])$

test_suite_log(suite,"Test functions in the BPNN.")$
bpnn:[]$
nn_outputs:[]$

case:test_case_begin(suite,"Test bpnn_solve_lms",[])$
test_case_run(
  case,
  test_case_log(case,"create BPNN."),
  bpnn:bpnn_new(
    dims,
    hides,
    [transfer,transfer],
    total_error),
  test_case_log(case,bpnn),
  
  lms:new(
    bpnn_lms_input(
      bpnn:bpnn,
      inputs:inputs,
      outputs:outputs,
      max_times:100,
      eta:0.1)),
  test_case_log(case,"LMS solver input."),
  test_case_log(case,lms),
  result:bpnn_solve_lms(lms),
  test_case_log(case,"LMS solver result."),
  test_case_log(case,result),
  
  err_expr:bpnn_caculate_symbol_error(lms@bpnn,lms@inputs,lms@outputs),
  original_error:bpnn_evaluate(lms@bpnn,err_expr),
  test_case_log(case,"Original error"),
  test_case_log(case,original_error),
  test_case_log(case,"Solved error"),
  test_case_log(case,result@total_error),
  test_case_assert_equal(
    case,
    "LMS result less or equal to original error",
    is(result@total_error <= original_error),
    true))$

test_case_end(case)$

test_suite_end(suite)$