/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 0.8.5 ] */


/* [wxMaxima: input   start ] */
bpnn_generate_symbols_matrixes(dims,symbols):=block(
    [i,len,r,tmp],
    len:length(dims),
    r:[],
    for i:1 step 1 while i < len do block(
        tmp:genmatrix(symbols[i],dims[i]+1,dims[i+1]),
        r:endcons(tmp,r)),
    r);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
bpnn_compute_levels_output(input,matrixes,transfer_functions):=block(
    maplist(lambda([m,f],
        if listp(input) then input:matrix(input),
        input:addcol(input,[-1]),
        input:input . m,
        input:f(input)),matrixes,transfer_functions));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
bp-nn data structure:
[
1.symbol_expression(s),  /*the symbol expression(s) of this model*/
2.symbols,/*the list of each level's symbol matrix's name*/
3.transfer_functions,/*the list of transfer functions*/
4.symbol_structures,/*the list of each level's symbol matrix,include threshholds*/
5.error_function
6.inputs,/*the list of input vectors*/
7.outputs,/*the list of output vectors*/
8.dims,/*the list of each level's dim,include threshholds*/
9.numeric_structures,
10.currrent error(cerror),
11.max_times,/*the max iteration time*/
12.eta,
13.min_error(recommanded),
13.differentiate of symbols.
.../*adds-on*/
]
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
[a b -1] .  [h1a h2a h3a]
            [h1b h2b h3b]
            [h1s h2s h3s]
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
/*initiallize the nn data structure 
*@param dims a list of level's dim,
*/
create_bpnn(dims,transfer_functions,levels_symbols,inputs,outputs,error_function):=block(
    [i,bpnn,symbols,transfer_values,
    symbol_expression,t,
    symbol_structures,out_list,total_error],
    symbols:levels_symbols,
    symbol_structures:bpnn_generate_symbols_matrixes(dims,levels_symbols),
    out_list:maplist(lambda([in],
        t:bpnn_compute_levels_output(in,symbol_structures,transfer_functions),
        last(t)
        ),inputs),
    total_error:error_function(outputs,out_list),
    symbol_expression:total_error,
    [symbol_expression,symbols,transfer_functions,symbol_structures,
        error_function,inputs,outputs,dims]
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
bpnn_normalize(outputs,interval):=block(
    [xmin,xmax,itmax,itmin],
    itmin:interval[1],
    itmax:interval[2],
    mmin(v):= block([m],
        m:v[1],
        if matrixp(v) then mapmatrix(lambda([x],if x < m then m:x),v) else m:lmin(v),
        m),
    mmax(v):=-mmin(-v),
    xmin:lmin(maplist(mmin,outputs)),
    xmax:lmax(maplist(mmax,outputs)),
    nnormalize(n):=(itmax - itmin) * (n-xmin)/(xmax-xmin) + itmin,
    vnormalize(v):=if matrixp(v) then matrixmap(nnormalize,v) else maplist(nnormalize,v),
    [maplist(vnormalize,outputs),diff(nnormalize(n),n,1),nnormalize(0)]
    );
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
bpnn_gen_outfunction(a,b,n):=block(print(x),a*x+makelist(b,i,1,n));
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
